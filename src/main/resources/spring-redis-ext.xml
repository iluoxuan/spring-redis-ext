<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">


    <cache:annotation-driven proxy-target-class="true" cache-manager="cacheManager" key-generator="cacheKeyGenerator"/>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="minIdle" value="${redis.minIdle}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.server.host}"
          p:port="${redis.server.port}"
          p:timeout="${redis.server.timeout}"
          p:password="${redis.server.pwd}"
          p:poolConfig-ref="jedisPoolConfig"
          p:database="${redis.db}"
          p:usePool="true"/>

    <bean id="stringSerializer" class="com.mljr.spring.redis.ext.StringSerializer"></bean>

    <bean id="fastjsonSerializer" class="com.mljr.spring.redis.ext.FastjsonSerializer"></bean>

    <bean id="cacheKeyGenerator" class="com.mljr.spring.redis.ext.CacheKeyGenerator"></bean>

    <bean id="nameSpaceCachePrefix" class="com.mljr.spring.redis.ext.NameSpaceCachePrefix">

        <property name="nameSpace" value="${redis.cache.namespace}"/>
    </bean>

    <!-- 缓存配置 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactory"
          p:keySerializer-ref="stringSerializer"
          p:hashKeySerializer-ref="stringSerializer"
          p:valueSerializer-ref="fastjsonSerializer"
          p:hashValueSerializer-ref="fastjsonSerializer"/>


    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg index="0" ref="redisTemplate"/>
        <property name="usePrefix" value="true"/>
        <property name="cachePrefix" ref="nameSpaceCachePrefix"/>
        <property name="expires">
            <map>
            </map>
        </property>
    </bean>

    <!-- redis 操作配置-->
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactory"/>

    <!-- redis分布式锁 -->
    <bean id="redisDistributedLock" class="com.mljr.spring.redis.ext.RedisDistributedLock">
        <property name="stringRedisTemplate" ref="stringRedisTemplate"/>
    </bean>

</beans>